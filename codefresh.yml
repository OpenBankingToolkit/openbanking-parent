version: "1.0"

stages:
  - clone
  - prepare
  - build
  - unit-test
  - package

steps:
  #  Clone stage
  main_clone:
    title: Cloning main repository...
    stage: "clone"
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'

  #  Prepare stage
  check-copyright:
    image: maven:3.6.1-jdk-11-slim
    stage: "prepare"
    title: "Verify copyrights"
    working-directory: ${{main_clone}}
    commands:
      - mvn -Dmaven.repo.local=/codefresh/volume/${{CF_BRANCH_TAG_NORMALIZED}}/.m2/repository license:check
  # Build stage
  build-stage:
    stage: "build"
    image: maven:3.6.1-jdk-11-slim
    title: "Compile, build and install artifact"
    working-directory: ${{main_clone}}
    commands:
      - mvn -Dmaven.repo.local=/codefresh/volume/${{CF_BRANCH_TAG_NORMALIZED}}/.m2/repository -Ddockerfile.skip -DdockerCompose.skip -DskipTests -DskipITs clean install -T 8

  # test stage
  test-stage:
    stage: "unit-test"
    image: maven:3.6.1-jdk-11-slim
    title: "Run unit tests"
    working-directory: ${{main_clone}}
    commands:
      - mvn -Dmaven.repo.local=/codefresh/volume/${{CF_BRANCH_TAG_NORMALIZED}}/.m2/repository -DdockerCompose.skip -Ddockerfile.skip -DskipITs verify

 # Package stage
  package-master:
    title: "Package jar and push to private maven repo"
    stage: "package"
    image: maven:3.6.1-jdk-11-slim
    commands:
      - mvn -Dmaven.repo.local=/codefresh/volume/${{CF_BRANCH_TAG_NORMALIZED}}/.m2/repository -Ddockerfile.skip -DdockerCompose.skip -DskipTests -DskipITs package -T 8
    when:
      branch:
        only:
          - master